using namespace std;

long long int uglyNumber(int n){
	// f2 maintains the index of the ugly number 
	// for multiplication by 2
	int f2 = 1;
	// f3 maintains the index of the ugly number 
	// for multiplication by 3
	int f3 = 1;
	// f5 maintains the index of the ugly number 
	// for multiplication by 5
	int f5 = 1;
	long long int dp[n + 1] = {0};
	// first ugly number is 1
	dp[1] = 1;
	// filling the dp matrix from i = 2
	for(int i = 2;i<=n;i++){
		// calculating the next number from previous ugly numbers
		long long int ans_f_2 = dp[f2] * 2;
		long long int ans_f_3 = dp[f3] * 3;
		long long int ans_f_5 = dp[f5] * 5;
		// finding minimum of all the answer
		long long int final_ans = min(ans_f_2, min(ans_f_3, ans_f_5));
		// storing the ans
		dp[i] = final_ans;
		// if our final_ans is ans_f_2, ans_f_3, ans_f_5 
		// then increment their counters i.e f2, f3, f5
		if(final_ans == ans_f_2){
			f2++;
		}
		if(final_ans == ans_f_3){
			f3++;
		}
		if(final_ans == ans_f_5){
			f5++;
		}
	} 
	return dp[n];
}

// driver program to check the code
int main() {
    int T;
    cin>>T;
    while(T--)
    {
            
    	int n;
    	cin >> n;
    	cout<<uglyNumber(n) << endl;
    }
	return 0;
}
